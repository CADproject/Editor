<Window x:Class="CADView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CADView"
        xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
        mc:Ignorable="d"
        AllowsTransparency="False"
        Title="Editor" BorderThickness="2" Height="500" Width="870" MinHeight="500" MinWidth="570" WindowStartupLocation="CenterScreen"
        HorizontalContentAlignment="Left"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel, IsDesignTimeCreatable=True}"
        >
    <Window.BorderBrush>
        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
            <GradientStop Color="Black" Offset="1"/>
            <GradientStop Color="White" Offset="0.495"/>
            <GradientStop Color="#FF5A5A5A"/>
            <GradientStop Color="#FF676767" Offset="0.998"/>
        </LinearGradientBrush>
    </Window.BorderBrush>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
        
    </Window.Resources>

    <Grid Background="{StaticResource BackgroundColor}">
        <Grid.Resources>
            <DataTemplate DataType="{x:Type local:MenuExpanderItem}">
                <DockPanel Background="{StaticResource BackgroundColor}" LastChildFill="False" Margin="2,2,0,0">
                    <ItemsControl ItemsSource="{Binding SubItems}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"></StackPanel>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                    <Grid Margin="2,2,0,2" Background="#FF505050" Width="3"></Grid>
                </DockPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:MenuSubItem}">
                <toolkit:SplitButton Height="{Binding Height}"
                                     ToolTip="{Binding HintText}" 
                                     Command="{Binding DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                     CommandParameter="{Binding Parameter}"
                                     Background="{StaticResource BackgroundColor}"
                                     BorderThickness="0">
                    <toolkit:SplitButton.DropDownContent>
                        <ItemsControl Background="{StaticResource BackgroundColor}" Margin="0,0,0,0" ItemsSource="{Binding SubItems}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical"></StackPanel>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </toolkit:SplitButton.DropDownContent>
                    <toolkit:SplitButton.Content>
                        <Rectangle Width="{Binding Width}" Height="{Binding Height}"
                      VerticalAlignment="Top" HorizontalAlignment="Left"
                           Margin="0,-2.5,0,0" ToolTip="{Binding HintText}">
                            <Rectangle.InputBindings>
                                <MouseBinding Command="{Binding DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                      CommandParameter="{Binding Parameter}" MouseAction="LeftClick" />
                            </Rectangle.InputBindings>

                            <Rectangle.OpacityMask>
                                <ImageBrush Stretch="Fill" ImageSource="{Binding Image}" ></ImageBrush>
                            </Rectangle.OpacityMask>
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Setter Property="Fill" Value="{StaticResource StandartButtonColor}" />
                                    <Style.Triggers>
                                        <EventTrigger RoutedEvent="Rectangle.PreviewMouseLeftButtonDown">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" To="{StaticResource PressedTelegramButtonColor}" Duration="0" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="Rectangle.MouseUp">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" To="{StaticResource TelegramButtonColor}" Duration="0" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                        <Trigger Property="IsMouseOver" Value="True" >
                                            <Setter Property="Fill" Value="{StaticResource TelegramButton}"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                    </toolkit:SplitButton.Content>
                </toolkit:SplitButton>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:MenuButtonItem}">
                <Rectangle Width="{Binding Width}" Height="{Binding Height}" 
                      VerticalAlignment="Top" HorizontalAlignment="Left"
                           Margin="1,1,1,1" ToolTip="{Binding HintText}">
                    <Rectangle.InputBindings>
                        <MouseBinding Command="{Binding DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                      CommandParameter="{Binding Parameter}" MouseAction="LeftClick" />
                    </Rectangle.InputBindings>

                    <Rectangle.OpacityMask>
                        <ImageBrush Stretch="Fill" ImageSource="{Binding Image}" ></ImageBrush>
                    </Rectangle.OpacityMask>
                    <Rectangle.Style>
                        <Style TargetType="{x:Type Rectangle}">
                            <Setter Property="Fill" Value="{StaticResource StandartButtonColor}" />
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Rectangle.PreviewMouseLeftButtonDown">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" To="{StaticResource PressedTelegramButtonColor}" Duration="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Rectangle.MouseUp">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" To="{StaticResource TelegramButtonColor}" Duration="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <Trigger Property="IsMouseOver" Value="True" >
                                    <Setter Property="Fill" Value="{StaticResource TelegramButton}"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:MenuTextButtonItem}">
                <Label Background="{StaticResource BackgroundColor}" x:Name="textButton"
                       Content="{Binding Description}" ToolTip="{Binding HintText}" Width="{Binding Width}" Height="{Binding Height}"
                       VerticalAlignment="Center" HorizontalAlignment="Left">
                    <Label.InputBindings>
                        <MouseBinding Command="{Binding DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                      CommandParameter="{Binding Parameter}" MouseAction="LeftClick" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Foreground" Value="{StaticResource StandartButtonColor}"></Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource TelegramButton}"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </DataTemplate>

            <!--<DataTemplate DataType="{x:Type local:MenuSubItem}">
                    <Expander ToolTip="{Binding HintText}" Width="{Binding Width}" MinHeight="{Binding Height}" Background="{Binding Color}"
                              Margin="0,0,0,0" IsExpanded="{Binding IsExpanded, Mode=TwoWay}">
                        <Expander.Header>
                            <BulletDecorator Margin="0,7,0,0" MinHeight="26">
                                <BulletDecorator.Bullet>
                                <Image Source="{Binding Image}" Stretch="Fill" Width="25" Height="25" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </BulletDecorator.Bullet>
                            </BulletDecorator>
                        </Expander.Header>
                        <ItemsControl Margin="0,6,0,0" ItemsSource="{Binding SubItems}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Margin="0,0,0,0" Orientation="Vertical"></StackPanel>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Expander>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:MenuButtonItem}">
                <Label Width="{Binding Width}" Height="{Binding Height}" Background="#80808080"
                       HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                       VerticalAlignment="Top" Margin="1,1,1,1" Foreground="White" ToolTip="{Binding HintText}">
                    <Label.InputBindings>
                        <MouseBinding Command="{Binding DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                      CommandParameter="{Binding Parameter}" MouseAction="LeftClick" />
                    </Label.InputBindings>
                    <Label.Style>
                        <Style TargetType="Label">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True" >
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                    <Image Margin="1,1,1,1" Source="{Binding Image}" Stretch="Uniform" Height="38"
                           HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Label>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:MenuExpanderItem}">
                <Expander Background="{Binding Color}" IsExpanded="{Binding IsExpanded, Mode=TwoWay}">
                    <Expander.Header>
                        <BulletDecorator Margin="0,0,20,0">
                            <BulletDecorator.Bullet>
                                <Image Source="{Binding Image}" Stretch="Fill" Width="64" Height="64" HorizontalAlignment="Left" VerticalAlignment="Top" />
                            </BulletDecorator.Bullet>
                            <TextBlock Margin="10,0,0,0" Text="{Binding HintText}" VerticalAlignment="Center" HorizontalAlignment="Stretch" Foreground="White" />
                        </BulletDecorator>
                    </Expander.Header>
                    <ItemsControl ItemsSource="{Binding SubItems}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"></StackPanel>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </Expander>
            </DataTemplate>-->

        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="2"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition MinHeight="25" MaxHeight="25" Height="25"/>
        </Grid.RowDefinitions>
        <Grid Row="0">
            <ItemsControl VerticalAlignment="Stretch" ItemsSource="{Binding UIMenuElements}" Margin="0">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <!--<ListBox VerticalAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Auto" ItemsSource="{Binding UIMenuElements}">
                <ListBox.Resources>
                    -->
            <!--<Style TargetType="{x:Type Expander}">
                        <Setter Property="IsExpanded">
                            <Setter.Value>
                                <Binding Path="IsSelected" RelativeSource="{RelativeSource AncestorType={x:Type ListBoxItem}}" />
                            </Setter.Value>
                        </Setter>
                    </Style>-->
            <!--
                </ListBox.Resources>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" ></WrapPanel>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                -->
            <!--<ListBox.Template>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <ItemsPresenter/>
                    </ControlTemplate>
                </ListBox.Template>-->
            <!--
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <ContentPresenter Content="{TemplateBinding Content}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>-->
        </Grid>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="100"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" VerticalAlignment="Stretch">
                <Grid.Resources>
                    <ControlTemplate x:Key="CustomHeaderTemplate">
                        <Border BorderThickness="2" CornerRadius="4">
                            <DockPanel LastChildFill="True">
                                <Button Content="X" DockPanel.Dock="Right" 
                                    IsEnabled="{Binding DataContext.IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                    Command="{Binding DataContext.CloseDocumentCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                    CommandParameter="{Binding}" Style="{StaticResource RoundedButton}" FontWeight="Bold" Width="20" Height="20">
                                </Button>
                                <Label Content="{Binding}" />
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Grid.Resources>
                <!--<TabControl ItemsSource="{Binding DocumentViewModelsTabs, Mode=TwoWay}"
                        SelectedIndex="{Binding SelectedDocumentIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TabControl.ItemContainerStyle>
                    <Style TargetType="TabItem">
                        <Setter Property="Header" Value="{Binding Title}" />
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Border BorderThickness="2" CornerRadius="4">
                                        <Control Template="{StaticResource CustomHeaderTemplate}"></Control>
                                    </Border>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.ItemContainerStyle>
            </TabControl>-->
                <dragablz:TabablzControl VerticalAlignment="Stretch" ItemsSource="{Binding DocumentViewModelsTabs, Mode=TwoWay}"
                                     SelectedIndex="{Binding SelectedDocumentIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     ConsolidateOrphanedItems="True" Margin="8" ShowDefaultCloseButton="True">
                    <dragablz:TabablzControl.HeaderItemTemplate>
                        <DataTemplate DataType="local:DocumentModel">
                            <Label Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dragablz:TabablzControl}}" MinWidth="60" Content="{Binding Path=Title}">
                                <Label.ContextMenu>
                                    <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <!--<ContextMenu.ItemTemplate>
                                        <DataTemplate DataType="MenuItem">
                                            <MenuItem Header="{Binding}" Command="{Binding}"></MenuItem>
                                        </DataTemplate>
                                    </ContextMenu.ItemTemplate>-->
                                        <MenuItem Header="Переименовать" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"></MenuItem>
                                        <MenuItem Header="Копировать" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"></MenuItem>
                                        <MenuItem Header="Новый документ" CommandParameter="{x:Static local:ButtonsCommands.NewDocument}" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"></MenuItem>
                                        <MenuItem Header="Закрыть" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"></MenuItem>
                                        <MenuItem Header="Закрыть все документы" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"></MenuItem>
                                    </ContextMenu>
                                </Label.ContextMenu>
                            </Label>
                        </DataTemplate>
                    </dragablz:TabablzControl.HeaderItemTemplate>
                    <dragablz:TabablzControl.ContentTemplate>
                        <DataTemplate DataType="local:DocumentModel">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>

                                <Grid Column="0" Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dragablz:TabablzControl}}"
                              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="DarkGray">
                                    <Grid.ContextMenu>
                                        <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Header="Копировать" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"></MenuItem>
                                            <MenuItem Header="Переместить" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"></MenuItem>
                                            <MenuItem Header="Повернуть" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"></MenuItem>
                                            <MenuItem Header="Отобразить симметрично" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"></MenuItem>
                                            <MenuItem Header="Отобразить по кругу" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"></MenuItem>
                                            <MenuItem Header="Масштабировать" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"></MenuItem>
                                            <Separator />
                                            <MenuItem Header="Свойства" CommandParameter="{x:Static local:ButtonsCommands.Properties}" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"></MenuItem>
                                            <Separator />
                                            <MenuItem Header="Показать узлы" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}">
                                                <MenuItem.Icon>
                                                    <Image Height="40" Source="Icons/Панель ОТОБРАЖЕНИЕ/Узлы.png"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Показать сетку" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}">
                                                <MenuItem.Icon>
                                                    <Image Source="Icons/Панель ОТОБРАЖЕНИЕ/Вспомогательная_сетка.png"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Показать всё" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}">
                                                <MenuItem.Icon>
                                                    <Image Source="Icons/Панель ОТОБРАЖЕНИЕ/Показать_все.png"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Grid.ContextMenu>
                                </Grid>
                                <Grid Column="1" Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dragablz:TabablzControl}}"
                              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="DarkGray">
                                    <Grid.ContextMenu>
                                        <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                            <MenuItem Header="Показать узлы" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}">
                                                <MenuItem.Icon>
                                                    <Image Height="40" Source="Icons/Панель ОТОБРАЖЕНИЕ/Узлы.png"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Показать сетку" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}">
                                                <MenuItem.Icon>
                                                    <Image Source="Icons/Панель ОТОБРАЖЕНИЕ/Вспомогательная_сетка.png"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Показать всё" Command="{Binding Path=DataContext.ControllerDialogCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}">
                                                <MenuItem.Icon>
                                                    <Image Source="Icons/Панель ОТОБРАЖЕНИЕ/Показать_все.png"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Grid.ContextMenu>
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </dragablz:TabablzControl.ContentTemplate>
                </dragablz:TabablzControl>
                <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,37,0,0">
                    <Label Visibility="{Binding InfoVisible}" Content="{Binding MainInfoText, Mode= OneWay}"></Label>
                    <Label Visibility="{Binding InfoVisible}" Content="{Binding AdditionalInfoText, Mode=OneWay}"></Label>
                </StackPanel>
                <Label Visibility="{Binding InfoVisible}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="10,0,0,10" Content="{Binding CoordinatesText, Mode=OneWay}"></Label>
            </Grid>
            <GridSplitter ShowsPreview="True" Grid.Row="1" ResizeDirection="Rows" ResizeBehavior="PreviousAndNext" 
                          VerticalAlignment="Center" HorizontalAlignment="Stretch" 
                      Height="2" Background="Transparent" />
            <Grid Visibility="{Binding ConsoleVisible}" x:Name="ConsolePart1" Grid.Row="2">
                <Grid>
                    <Border Grid.Row="0" BorderThickness="1" BorderBrush="DarkSlateGray">
                        <TextBox Background="{StaticResource BackgroundColor}" VerticalAlignment="Stretch" Margin="0,0,0,-3" IsReadOnly="True" IsReadOnlyCaretVisible="True" VerticalScrollBarVisibility="Visible" Text="wewewefrv"/>
                    </Border>
                </Grid>
            </Grid>
        </Grid>

        <Grid Visibility="{Binding ConsoleVisible}" x:Name="ConsolePart2" Grid.Row="4">
            <Border BorderThickness="1" BorderBrush="DarkSlateGray">
                <TextBox Background="{StaticResource BackgroundColor}"></TextBox>
            </Border>
            <Image Margin="0,2,2,2" HorizontalAlignment="Right" Height="15" Width="15" Stretch="Fill" Source="Icons/arrow.png" RenderTransformOrigin="0.5,0.5" >
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="180"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>
        </Grid>

        <Border Grid.Row="5" BorderThickness="1" BorderBrush="Black">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"></ColumnDefinition>
                    <ColumnDefinition MinWidth="100" Width="1*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <GridSplitter Background="Black" Width="1"></GridSplitter>
                <Label Visibility="{Binding InfoVisible}" Grid.Column="1" Content="{Binding StatusBarText, Mode=OneWay}" />
            </Grid>
        </Border>
    </Grid>
</Window>
